/**********************************************************

	Following is the Binary Tree Node class structure

	template <typename T>
	class BinaryTreeNode {
    	public: 
    	T data;
    	BinaryTreeNode<T> *left;
    	BinaryTreeNode<T> *right;

    	BinaryTreeNode(T data) {
        	this->data = data;
        	left = NULL;
        	right = NULL;
    	}
	};
	
***********************************************************/
#include <algorithm>
#include <climits>
#include <vector>
void intoArray(BinaryTreeNode<int> *root, vector<int> &arr) {
  if (root == NULL) {
    return;
  }
  arr.push_back(root->data);
  intoArray(root->left, arr);
  intoArray(root->right, arr);
}
void printNodesSumToS(BinaryTreeNode<int> *root, int s) {
      vector<int> arr;
      intoArray(root, arr);
      sort(arr.begin(), arr.end());
      int i = 0, j = arr.size() - 1;
      while (i < j) {
        if (arr[i] + arr[j] < s) {
          i++;
        } else if (arr[i] + arr[j] > s) {
          j--;
        } else {
          cout << arr[i] << " " << arr[j] << "\n";
          i++;
          j--;
        }
      }
    }
