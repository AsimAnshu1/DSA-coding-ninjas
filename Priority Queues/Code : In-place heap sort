void heapSort(int arr[], int n) {
  for (int i = 1; i < n; i++) {
    int childIndex = i;
    while (childIndex > 0) {
      int parentIndex = (childIndex - 1) / 2;

      if (arr[childIndex] < arr[parentIndex]) {
        int temp = arr[childIndex];
        arr[childIndex] = arr[parentIndex];
        arr[parentIndex] = temp;
      } else {
        break;
      }

      childIndex = parentIndex;
    }
  }
  int size = n;
  while (size > 1) {
    int temp = arr[0];
    arr[0] = arr[size - 1];
    arr[size - 1] = temp;
    size--;

    int parentIndex = 0;
    int childIndex1 = 2 * parentIndex + 1;
    int childIndex2 = 2 * parentIndex + 2;

    while (childIndex1 < size) {
      int swapIndex = parentIndex;
      if (arr[swapIndex] > arr[childIndex1]) {
        swapIndex = childIndex1;
      }
      if (childIndex2 < size && arr[childIndex2] < arr[swapIndex]) {
        swapIndex = childIndex2;
      }
      if (swapIndex == parentIndex) {
        break;
      }
      int temp = arr[swapIndex];
      arr[swapIndex] = arr[parentIndex];
      arr[parentIndex] = temp;

      parentIndex = swapIndex;
      childIndex1 = 2 * parentIndex + 1;
      childIndex2 = 2 * parentIndex + 2;
    }
  }
}
