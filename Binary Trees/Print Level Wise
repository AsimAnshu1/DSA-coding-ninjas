/**********************************************************

	Following is the Binary Tree Node class structure

	template <typename T>
	class BinaryTreeNode {
    	public : 
    	T data;
    	BinaryTreeNode<T> *left;
    	BinaryTreeNode<T> *right;

    	BinaryTreeNode(T data) {
        	this -> data = data;
        	left = NULL;
        	right = NULL;
    	}
	};

***********************************************************/
void printLevelWise(BinaryTreeNode<int> *root) {
	// Write your code here
	queue<BinaryTreeNode<int>*> pendingnodes;
	pendingnodes.push(root);
	while(!pendingnodes.empty()){
		BinaryTreeNode<int> *front = pendingnodes.front();
		pendingnodes.pop();
		cout<<front->data<<":";
		if(front->left != NULL){
			cout<<"L:"<<front->left->data<<",";
			pendingnodes.push(front->left);
		} 
		else{
                  cout << "L:" << -1 << ",";
                }
		if(front->right!=NULL){
			cout<<"R:"<<front->right->data<<endl;
			pendingnodes.push(front->right);
		}
		else{
                  cout << "R:" <<  -1 << endl;
                }
	}
}
