/***********************************************************
	Following is the Binary Tree Node class structure

	template <typename T>
	class BinaryTreeNode {
    	public : 
    	T data;
    	BinaryTreeNode<T> *left;
    	BinaryTreeNode<T> *right;

    	BinaryTreeNode(T data) {
        	this -> data = data;
        	left = NULL;
        	right = NULL;
    	}
	};

***********************************************************/
BinaryTreeNode<int> *buildTreehelper(int *preorder, int *inorder, int inS, int inE,int preS, int preE ) {
 if(inS>inE){
   return NULL;
 }
  int rootData = preorder[preS];
    int rootIndex =-1;
    for(int i=inS;i<=inE;i++){
      if(inorder[i]==rootData){
        rootIndex = i;
        break;
      }
    }
  int linS=inS; 
  int linE= rootIndex-1;
  int lpreS= preS+1;
  int lpreE= linE-linS+lpreS;
  int rpreS= lpreE+1;
  int rpreE= preE;
  int rinS = rootIndex + 1;
  int rinE = inE;

  BinaryTreeNode<int> * root =new BinaryTreeNode<int>(rootData);
  root->left = buildTreehelper(preorder, inorder,  linS, linE, lpreS, lpreE);
  root->right = buildTreehelper(preorder, inorder, rinS, rinE, rpreS,rpreE);
  return root;
}
 BinaryTreeNode<int> *buildTree(int *preorder, int preLength, int *inorder, int inLength) {
  return buildTreehelper(preorder, inorder, 0, inLength - 1, 0, inLength-1);
}
